<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newbie.community.dao.BlogDao">
    <sql id="selectFields">
        id,user_id,title,content,html,catgory_id,status,create_time
    </sql>
    <select id="selectById" resultType="Blog">
        select <include refid="selectFields"></include>
        from blog
        where id=#{id}
        and status!=1
    </select>
    <select id="selectAll" resultType="Blog">
        select <include refid="selectFields"></include>
        from blog
        where status!=1
        <if test="userId!=0">
            and user_id=#{userId}
        </if>
        order by create_time desc
        limit #{offset},#{limit}
    </select>
    <select id="selectCount" resultType="int">
        select count(*) from blog
        where status!=1
        <if test="userId!=0">
            and userId=#{userId}
        </if>
    </select>
    <select id="selectCountOfSpecifiedCategory" resultType="int">
        select count(*) from blog
        where status!=1
        and category_id=#{categoryId}
    </select>
    <insert id="insert" parameterType="Blog" keyProperty="id">
        insert into blog(user_id,title,content,html,catgory_id,status,create_time)
        values (#{userId},#{title},#{content},#{html},#{catgoryId},#{status},#{createTime})
    </insert>
    <update id="updateStatus">
        update blog
        set status=#{status}
        where id=#{id}
    </update>
    
    <update id="updateById" parameterType="Blog" >
        update blog
        set user_id=#{blog.userId},
            title=#{blog.title},
            content=#{blog.content},
            html=#{blog.html},
            catgory_id=#{blog.catgoryId},
            status=#{blog.status},
            create_time=#{blog.createTime}
        where id=#{id}
    </update>
</mapper>